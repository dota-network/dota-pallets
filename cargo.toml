

[workspace.package]
authors = ["weaver"]
edition = "2021"
repository = "https://github.com/dota-network/dota-pallets.git"
license = "APCHE2.0"
homepage = "https://github.com/dota-network"

[workspace]
resolver = "2"

members = ["bridge"

]


[workspace.dependencies]
codec = { version = "3.6.12", default-features = false, package = "parity-scale-codec" }
log = { version = "0.4.22", default-features = false }
scale-info = { version = "2.11.6", default-features = false }

frame-support = { git = "https://github.com/paritytech/polkadot-sdk.git", default-features = false, branch="release-polkadot-v1.13.0" }
frame-system = { git = "https://github.com/paritytech/polkadot-sdk.git", default-features = false, branch="release-polkadot-v1.13.0" }

sp-core = { git = "https://github.com/paritytech/polkadot-sdk.git", default-features = false, branch="release-polkadot-v1.13.0" }
sp-io = { git = "https://github.com/paritytech/polkadot-sdk.git", default-features = false, branch="release-polkadot-v1.13.0" }
sp-runtime = { git = "https://github.com/paritytech/polkadot-sdk.git", default-features = false, branch="release-polkadot-v1.13.0" }

frame-benchmarking = { git = "https://github.com/paritytech/polkadot-sdk.git", default-features = false, branch="release-polkadot-v1.13.0" }


[workspace.lints.clippy]
all = { level = "allow", priority = 0 }
correctness = { level = "warn", priority = 1 }
complexity = { level = "warn", priority = 1 }
if-same-then-else = { level = "allow", priority = 2 }
zero-prefixed-literal = { level = "allow", priority = 2 }            # 00_1000_000
type_complexity = { level = "allow", priority = 2 }                  # raison d'etre
nonminimal-bool = { level = "allow", priority = 2 }                  # maybe
borrowed-box = { level = "allow", priority = 2 }                     # Reasonable to fix this one
too-many-arguments = { level = "allow", priority = 2 }               # (Turning this on would lead to)
needless-lifetimes = { level = "allow", priority = 2 }               # generated code
unnecessary_cast = { level = "allow", priority = 2 }                 # Types may change
identity-op = { level = "allow", priority = 2 }                      # One case where we do 0 +
useless_conversion = { level = "allow", priority = 2 }               # Types may change
unit_arg = { level = "allow", priority = 2 }                         # stylistic
option-map-unit-fn = { level = "allow", priority = 2 }               # stylistic
bind_instead_of_map = { level = "allow", priority = 2 }              # stylistic
erasing_op = { level = "allow", priority = 2 }                       # E.g. 0 * DOLLARS
eq_op = { level = "allow", priority = 2 }                            # In tests we test equality.
while_immutable_condition = { level = "allow", priority = 2 }        # false positives
needless_option_as_deref = { level = "allow", priority = 2 }         # false positives
derivable_impls = { level = "allow", priority = 2 }                  # false positives
stable_sort_primitive = { level = "allow", priority = 2 }            # prefer stable sort
extra-unused-type-parameters = { level = "allow", priority = 2 }     # stylistic
default_constructed_unit_structs = { level = "allow", priority = 2 } # stylistic
